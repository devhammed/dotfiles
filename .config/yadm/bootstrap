#!/bin/sh

# Helper functions
is_not_installed() {
  ! command -v $1 >/dev/null 2>&1
}

# Setup Yadm repository
cd $HOME
echo "Updating the yadm repo origin URL"
yadm remote set-url origin "git@github.com:devhammed/dotfiles.git"

# Install Homebrew
if is_not_installed brew; then
  echo "Installing Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

# Install Brew packages
if [ -f "$HOME/.Brewfile" ]; then
  echo "Updating Homebrew Bundle..."
  brew bundle install
fi

# Install Global NPM Packages
if is_not_installed vercel; then
  echo "Installing Global NPM Packages..."

  npm install -g @angular/cli @svgr/cli bash-language-server caniuse-cmd firebase-tools live-server prettier-standard standard typescript vercel
fi

# Install DENO
if is_not_installed deno; then
  echo "Installing Deno..."
  export DENO_INSTALL="$HOME/Tools/deno"
  mkdir -p $DENO_INSTALL
  curl -fsSL https://deno.land/x/install/install.sh | sh
fi

# Install Flutter
if is_not_installed flutter; then
  echo "Installing Flutter..."
  export FLUTTER_SDK_PATH="$HOME/Tools/flutter/bin"
  mkdir -p $FLUTTER_SDK_PATH
  git clone https://github.com/flutter/flutter.git -b stable $FLUTTER_SDK_PATH
fi

# Install Rustup
if is_not_installed rustc; then
  echo "Installing Rust..."
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
fi

# Install PHP Composer
if is_not_installed composer; then
  echo "Installing PHP Composer"
  local_bin="$HOME/.local/bin"
  mkdir -p $local_bin
  wget -O $local_bin/composer https://getcomposer.org/composer-stable.phar
fi

# Install ZSH
if is_not_installed zsh; then
  echo "Installing zsh"
  sudo apt install zsh
  echo "Changing current user shell to zsh"
  chsh -s `which zsh` $USER
fi

# Install Starship Prompt
if is_not_installed starship; then
  curl -fsSL https://starship.rs/install.sh | bash
fi

# Install Albert Launcher
if is_not_installed albert; then
  curl https://build.opensuse.org/projects/home:manuelschneid3r/public_key | sudo apt-key add - && \

  echo 'deb http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_20.04/ /' | sudo tee /etc/apt/sources.list.d/home:manuelschneid3r.list && \

  sudo wget -nv https://download.opensuse.org/repositories/home:manuelschneid3r/xUbuntu_20.04/Release.key -O "/etc/apt/trusted.gpg.d/home:manuelschneid3r.asc" && \

  sudo apt update && \
  
  sudo apt install albert
fi

# Install ZSH Plugins
ZSH_CUSTOM="$HOME/.oh-my-zsh/custom"
ZSH_CUSTOM_PLUGINS="$ZSH_CUSTOM/plugins"

if [ ! -d "$ZSH_CUSTOM" ]; then
  echo "Installing oh-my-zsh"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

if [ ! -d "$ZSH_CUSTOM_PLUGINS/zsh-completions" ]; then
  git clone https://github.com/zsh-users/zsh-completions "$ZSH_CUSTOM_PLUGINS/zsh-completions"
fi

if [ ! -d "$ZSH_CUSTOM_PLUGINS/zsh-syntax-highlighting" ]; then
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$ZSH_CUSTOM_PLUGINS/zsh-syntax-highlighting"
fi

if [ ! -d "$ZSH_CUSTOM_PLUGINS/zsh-autosuggestions" ]; then
  git clone https://github.com/zsh-users/zsh-autosuggestions "$ZSH_CUSTOM_PLUGINS/zsh-autosuggestions"
fi
